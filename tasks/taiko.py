from web3 import Web3
from typing import Optional
import time

from client import Client
from data.config import TAIKO_ABI, HORSE_ABI
from utils import read_json
from models import TokenAmount


class Taiko:
    eth_address = Web3.to_checksum_address('0x095DDce4fd8818aD159D778E6a9898A2474933ca')
    horse_address = Web3.to_checksum_address('0x0469760d321D08AB4fce75E2E799902C9f55dA59')

    pool_address = Web3.to_checksum_address('0x5CBFccd27dB8A3981FE9965b0de59D436B2BD8b9')

    router_abi = read_json(TAIKO_ABI)
    pool_abi = read_json(HORSE_ABI)
    router_address = Web3.to_checksum_address('0x095DDce4fd8818aD159D778E6a9898A2474933ca')

    def __init__(self, client: Client):
        self.client = client

    def pool(self, slippage: float = 1):
        contract = self.client.w3.eth.contract(
            abi=Taiko.pool_abi,
            address=Taiko.pool_address
        )

        data = '0xac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000164883164560000000000000000000000000011e559da84dde3f841e22dc33f3adbf184d84a000000000000000000000000d69d3e64d71844bbdda51cd7f23ed3631e9fac49000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000163ae0000000000000000000000000000000000000000000000000000000000016b85000000000000000000000000000000000000000000000000003e0b96970b9e380000000000000000000000000000000000000000000000027ca4bd719f0b7e36000000000000000000000000000000000000000000000000003c02280d2cbfe90000000000000000000000000000000000000000000000023186c1daf88e02c400000000000000000000000026648d7d21d575d8488b0816a00d58629849d1650000000000000000000000000000000000000000000000000000000065c60f8800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000412210e8a00000000000000000000000000000000000000000000000000000000'

        decoded_data = contract.decode_function_input(data)

        print('DECODEED', decoded_data)

        # amount = self.client.send_token()

#         amount = self.client.balance_of(contract_address=Taiko.horse_address)

#         print('!!!!!!!!!!!!11111111111111111!!!!!!!!!!!!!!!', amount )

#         contract = self.client.w3.eth.contract(
#             abi=Taiko.router_abi,
#             address=Taiko.router_address
#         )
#

        print("GO")
        return self.client.send_token( to=Taiko.router_address, contract=contract)
